{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 git init make a directory a git repos\
\
git status\
git add .    (or git add filename(s)) to stage in cache\
git rm --cached filenames   to unstage\
git commit -m "message"\
git log\
\
every time you do a commit the files staged in the cache to be committed are fluted. Once changes are made to files, they need to be restaged\
\
git diff look at unstaged changes\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 git diff --cached look at staged changes\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
\
git log --oneline\
\
shortcuts:\
git commit -a -m "message"   add and commit\
git status -s show files that have been modified}